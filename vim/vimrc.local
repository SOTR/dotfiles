colorscheme onedark

set mouse=

set nocompatible
set hidden

set showtabline=0

" deactivate highlighting of cursorline because of performance issues
set nocursorline

let g:CtrlSpaceStatuslineFunction = "airline#extensions#ctrlspace#statusline()"

" Replace glob command for control space to ignore .gitignore files and .git folders
" but still show hidden files like .bablelrc or .gitignore

if executable("ag")
	let g:CtrlSpaceGlobCommand = 'ag -l --hidden --ignore .git --nocolor -g ""'
endif 

" enable/disable enhanced tabline. (c) >
" let g:airline#extensions#tabline#enabled = 1

" enable/disable displaying open splits per tab (only when tabs are opened). >
" let g:airline#extensions#tabline#show_splits = 1

" switch position of buffers and tabs on splited tabline (c)
" (only supported for ctrlspace plugin). >
" let g:airline#extensions#tabline#switch_buffers_and_tabs = 0

" enable/disable displaying buffers with a single tab. (c) >
" let g:airline#extensions#tabline#show_buffers = 1

" let g:airline#extensions#tabline#buffer_nr_show = 1

" let g:airline#extensions#tabline#show_close_button = 0
" enable/disable vim-ctrlspace integration >
let g:airline#extensions#ctrlspace#enabled = 1

let g:CtrlSpaceStatuslineFunction = "airline#extensions#ctrlspace#statusline()"

" let g:CtrlSpaceLoadLastWorkspaceOnStart = 1
let g:CtrlSpaceSaveWorkspaceOnSwitch = 1
let g:CtrlSpaceSaveWorkspaceOnExit = 1
let g:CtrlSpaceIgnoredFiles = '\v.*\.(so|o|apk)$'

"activate deoplete
let g:deoplete#enable_at_startup = 1

" deactivate parentheses after function name
let g:autocomplete_flow#insert_paren_after_function = 0

" deoplete tab-complete
inoremap <expr><tab> pumvisible() ? "\<c-n>" : "\<tab>"
" tern
"autocmd FileType javascript nnoremap <silent> <buffer> gb :TernDef<CR>

" Examples:
" Sample configuration for dictionary source with multiple
" dictionary files.
setlocal dictionary+=/usr/share/dict/words
setlocal dictionary+=/usr/share/dict/american-english
" Remove this if you'd like to use fuzzy search
call deoplete#custom#source(
\ 'dictionary', 'matchers', ['matcher_head'])
" If dictionary is already sorted, no need to sort it again.
call deoplete#custom#source(
\ 'dictionary', 'sorters', [])
" Do not complete too short words
call deoplete#custom#source(
\ 'dictionary', 'min_pattern_length', 4)


		" Using custom variables to configure values
		" - range_above = Search for words N lines above.
		" - range_below = Search for words N lines below.
		" - mark_above = Mark shown for words N lines above.
		" - mark_below = Mark shown for words N lines below.
		" - mark_changes = Mark shown for words in the changelist.
		call deoplete#custom#var('around', {
		\   'range_above': 15,
		\   'range_below': 15,
		\   'mark_above': '[↑]',
		\   'mark_below': '[↓]',
		\   'mark_changes': '[*]',
		\})

let g:deoplete#auto_completion_start_length = 2

" Change clang binary path
call deoplete#custom#var('clangx', 'clang_binary', '/usr/bin/clang')

" Change clang options
call deoplete#custom#var('clangx', 'default_c_options', '')
call deoplete#custom#var('clangx', 'default_cpp_options', '')
